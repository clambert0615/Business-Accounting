@using AccountingProgram.Models

@model List<AccountsReceivable>

<h1 style="text-align:center">Accounts Receivable</h1>
<br />
<label for="arInput">Further filter your search: </label>
<input type="text" id="arInput" onkeyup="myFunction()" placeholder="Filter search" title="Type in a keyword">
<br />

<table class="table table-striped table-bordered dt-responsive nowrap" id="arTable" width="100%" cellspacing="0">

    <thead>
        <tr class="header">
            <th onclick="sortTable(0)" style="cursor:pointer">Id</th>
            <th onclick="sortTable(1)" style="cursor:pointer">Due Date</th>
            <th onclick="sortTable(2)" style="cursor:pointer">Total Amount</th>
            <th onclick="sortTable(3)" style="cursor:pointer">Balance</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var ar in Model)
        {
            <tr>
                <td class="td1"><a href="/AccountsReceivable/IndividualReceivable?id=@ar.Id">@ar.Id</a></td>
                <td class="td1">@ar.DueDate.ToString("yyyy-MM-dd")</td>
                <td class="td1">@ar.Amount</td>
                <td class="td1">@ar.Balance</td>
            </tr>
        }
    </tbody>
</table>

<script>
    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("arTable");
        switching = true;
        dir = "asc";
        while (switching) {
            switching = false;
            rows = table.rows;
            for (i = 1; i < (rows.length - 1); i++) {
                shouldSwitch = false;
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];
                let xData = x.innerText;
                let yData = y.innerText;
                const isNumeric =
                    xData.indexOf("-") === -1 &&
                    yData.indexOf("-") === -1 &&
                    !isNaN(parseFloat(xData)) &&
                    !isNaN(parseFloat(yData));
                if (dir == "asc") {
                    if ((isNumeric && parseFloat(xData) > parseFloat(yData)) ||
                        (!isNumeric && xData.toLowerCase() > yData.toLowerCase())) {
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if ((isNumeric && parseFloat(xData) < parseFloat(yData)) ||
                        (!isNumeric && xData.toLowerCase() < yData.toLowerCase())) {
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                switchcount++;
            } else {
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }

    function myFunction() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("arInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("arTable");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[0];
            td2 = tr[i].getElementsByTagName("td")[1];
            td3 = tr[i].getElementsByTagName("td")[2];
            td4 = tr[i].getElementsByTagName("td")[3];
        

            if (td || td2 || td3 || td4) {
                txtValue = td.textContent || td.innerText;
                txtValue2 = td2.textContent || td2.innerText;
                txtValue3 = td3.textContent || td3.innerText;
                txtValue4 = td4.textContent || td4.innerText;
           

                if (txtValue.toUpperCase().indexOf(filter) > -1 || txtValue2.toUpperCase().indexOf(filter) > -1 || txtValue3.toUpperCase().indexOf(filter) > -1
                    || txtValue4.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>

